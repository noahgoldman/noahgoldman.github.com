---
layout: post
title: "An Unfinished Idea: My Lovely Assistant"
---

h1. {{ page.title }}

An information management tool; essentially, a wikified outliner, or an outliner for linked data structures, depending on how you want to conceive of it.

At its simplest, My Lovely Assistant ("lass", for short and for command line use) is an outliner that allows child nodes to be (links to) other documents. If you have a look at the forums for popular Mac OS X outliner OmniOutliner, you'll see many a request for the addition of some sort of multi-document paradigm. Most anyone who's gotten comfortable with an outliner finds it difficult to store information any other way, but the one-outline-at-a-time limitation of most outliners impedes many use cases. By linking outlines as one would pages in a wiki, it's possible to build a rich web of hierarchically structured data while moving beyond a single-document mode of interaction.

One possible implementation, targeting the browser, is to represent every outline as a JSON document. Documents are linked together by making child nodes URLs; any URL ending in ".json" would be treated as a new structure to be nested within the document. JSON documents that are not structured as outlines could be included, and rendered on a "best effort" basis, perhaps through an extension framework. Imagine a master outline in which some of the children are outlines in their own right, but other children are "live" JSON data from around the web: Twitter users or statuses, books from the Times Best Sellers list, etc.

A more desktop-oriented implementation could simply treat "outline nodes" as the Mac OS X Finder does nested folders when in column view. Click on a nested outline, and the interface swoops to the right to bring its contents into focus while retaining a visual linkage between the child outline and its parent node.

This is another thing that I've wanted to use every day since I thought of it. I'm aware of other attempts at wiki/hypertext-capable outliners, but none have caught on.